============================================
Assignments
============================================

function Run() {
  d.e = 3;
  h[i] = j;
  Self._property:a = b;
  a = 1 = 2;
}

---

(program
  (mss_function (identifier) (parameter_list)
    (statement_block
      (assignment_statement (field_expression (identifier) (identifier)) (number_literal))
      (assignment_statement (subscript_expression (identifier) (identifier)) (identifier))
      (assignment_statement (user_property_expression (identifier) (identifier)) (identifier))
      (assignment_statement (identifier) (binary_expression (number_literal) (number_literal))))))

============================================
Empty statements
============================================

function Run() {
  ;
}

---

(program
  (mss_function (identifier) (parameter_list)
    (statement_block
      (empty_statement))))

============================================
If statements
============================================

function Run() {
  if (not a) {
    a = 2;
  } else {
    a = 3;
  }
}

---

(program
  (mss_function (identifier) (parameter_list)
    (statement_block
      (if_statement (parenthesized_expression (unary_expression (identifier)))
        (statement_block
          (assignment_statement (identifier) (number_literal)))
        (statement_block
          (assignment_statement (identifier) (number_literal)))))))

============================================
For loops
============================================

function Run() {
  for i = 1 to 5 {
    ;
  }

  for i = a.b to foo() {
    ;
  }

  for each a in b {
    ;
  }

  for each NoteRest a in selection {
    ;
  }
}

---

(program
  (mss_function (identifier) (parameter_list)
    (statement_block
      (for_statement
        (identifier) (number_literal) (number_literal) (statement_block (empty_statement)))
      (for_statement
        (identifier)
        (field_expression (identifier) (identifier))
        (call_expression (identifier) (argument_list))
        (statement_block (empty_statement)))
      (for_each_statement
        (identifier) (identifier) (statement_block
          (empty_statement)))
      (for_each_statement
        (identifier) (identifier) (identifier) (statement_block
          (empty_statement))))))

============================================
While loops
============================================

function Run() {
  while (x) {
    Trace('hi');
  }
}

---

(program
  (mss_function (identifier) (parameter_list)
    (statement_block
      (while_statement (parenthesized_expression (identifier))
        (statement_block (call_statement (call_expression
          (identifier)
          (argument_list (string_literal)))))))))


============================================
Comments
============================================

function Run() {
  /*************************
   * odd number of asterisks
   *************************/
  ;

  /**************************
   * even number of asterisks
   **************************/
  ;

  // one-line comment
}


---

(program
  (mss_function (identifier) (parameter_list)
    (statement_block
      (comment)
      (empty_statement)
      (comment)
      (empty_statement)
      (comment))))

============================================
Switch statements
============================================

function Run() {
  switch (x) {
    case (1) {
        ;
    }
    case (2) {
      something();
    }
    case 'three' {
      somethingElse();
    }
    default {
      return 4;
    }
  }
}

---

(program
  (mss_function (identifier) (parameter_list)
    (statement_block
      (switch_statement (parenthesized_expression (identifier))
        (switch_case (parenthesized_expression (number_literal)) (statement_block
            (empty_statement)))
        (switch_case (parenthesized_expression (number_literal)) (statement_block
          (call_statement (call_expression (identifier) (argument_list)))))
        (switch_case (string_literal) (statement_block
          (call_statement (call_expression (identifier) (argument_list)))))
        (switch_default (statement_block
          (return_statement (number_literal))))))))
